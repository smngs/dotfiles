{
  "atcoder": {
    "prefix": "atcoder",
    "body": [
      "#include <bits/stdc++.h>",
      "using namespace std;",
      "",
      "int main() {",
      "\t$1",
      "}"
    ],
    "description": "atcoder template"
  },

  "header": {
    "prefix": "header",
    "body": ["#include <bits/stdc++.h>", "using namespace std;"],
    "description": "calling header"
  },

  "cout": {
    "prefix": "co",
    "body": ["cout << $1 << endl;"],
    "description": "standard output"
  },

  "cout2": {
    "prefix": "co2",
    "body": ["cout << $1 << $2 << endl;"],
    "description": "standard output"
  },

  "cout3": {
    "prefix": "co3",
    "body": ["cout << $1 << $2 << $3 << endl;"],
    "description": "standard output"
  },

  "cin": {
    "prefix": "ci",
    "body": ["cin >> $1;"],
    "description": "standard input"
  },

  "cin2": {
    "prefix": "ci2",
    "body": ["cin >> $1 >> $2;"],
    "description": "standard input"
  },

  "cin3": {
    "prefix": "ci3",
    "body": ["cin >> $1 >> $2 >> $3;"],
    "description": "standard input"
  },

  "while": {
    "prefix": "while",
    "body": ["while (${1:expression}) {", "\t${0:}", "}"],
    "description": "while loop"
  },

  "vector": {
    "prefix": "v",
    "body": [
      "vector<${1:int}> ${2:var}(${3:n});"
    ],
    "description": "declare vector"
  },

  "vector<int>": {
    "prefix": "vi",
    "body": [
      "vector<int> ${1:var}(${2:n});"
    ],
    "description": "declare vector<int>"
  },

  "vector<long>": {
    "prefix": "vl",
    "body": [
      "vector<long> ${1:var}(${2:n});"
    ],
    "description": "declare vector<long>"
  },

  "vector<long long>": {
    "prefix": "vll",
    "body": [
      "vector<long long> ${1:var}(${2:n});"
    ],
    "description": "declare vector<long long>"
  },

  "vector<string>": {
    "prefix": "vs",
    "body": [
      "vector<string> ${1:var}(${2:n});"
    ],
    "description": "declare vector<string>"
  },

  "vector<vector<>>": {
    "prefix": "vv",
    "body": [
      "vector<vector<${1:int}>> ${2:var}(${3:n}, vector<${1:int}>(${4:m}));"
    ],
    "description": "declare vector<vector<>>"
  },

  "vector<vector<int>>": {
    "prefix": "vvi",
    "body": [
      "vector<vector<int>> ${1:var}(${2:n}, vector<int>(${3:m}));"
    ],
    "description": "declare vector<vector<int>>"
  },

  "vector<vector<long>>": {
    "prefix": "vvl",
    "body": [
      "vector<vector<long>> ${1:var}(${2:n}, vector<long>(${3:m}));"
    ],
    "description": "declare vector<vector<long>>"
  },

  "vector<vector<long long>>": {
    "prefix": "vvll",
    "body": [
      "vector<vector<long long>> ${1:var}(${2:n}, vector<long long>(${3:m}));"
    ],
    "description": "declare vector<vector<long long>>"
  },

  "vectordebug": {
    "prefix": "vdebug",
    "body": [
      "for (auto v: ${1:vec}) {",
      "\tcout << v << ' ';",
      "}",
      "cout << endl;",
      ""
    ],
    "description": "debug print for vector"
  },

  "input1": {
    "prefix": "input",
    "body": [
      "${1:int} ${2:n};",
      "cin >> $2;",
      ""
    ],
    "description": "input1"
  },
  "input2": {
    "prefix": "input2",
    "body": [
      "${1:int} ${2:n}, ${3:m};",
      "cin >> $2 >> $3;",
      ""
    ],
    "description": "input2"
  },

  "inputvec": {
    "prefix": "inputvec",
    "body": [
      "vector<${1:int)> a(${2:n})",
      "for (${1:int} ${3:i} = 0; ${3:i} < ${2:n}; ${3:i}++) {",
      "\tcin << a.at(${3:i})",
      "}",
      ""
    ],
    "description": "inputvec"
  },

  "loop": {
    "prefix": "for",
    "body": [
      "for (int ${1:i} = 0; ${1:i} < ${2:n}; ${1:i}++) {",
      "\t${3}",
      "}",
      "${4}"
    ],
    "description": "loop"
  },

  "double for loop": {
    "prefix": "for2",
    "body": [
      "for (int ${1:i} = 0; ${1:i} < ${2:n}; ${1:i}++) {",
      "\tfor (int ${3:j} = 0; ${3:j} < ${4:m}; ${3:j}++) {",
      "\t\t${5}",
      "\t}",
      "}",
      "${6}"
    ],
    "description": "double for loop"
  },

  "triple for loop": {
    "prefix": "for3",
    "body": [
      "for (int ${1:i} = 0; ${1:i} < ${2:n}; ${1:i}++) {",
      "\tfor (int ${3:j} = 0; ${3:j} < ${4:m}; ${3:j}++) {",
      "\t\tfor (int ${5:k} = 0; ${5:k} < ${6:l}; ${5:k}++) {",
      "\t\t\t${7}",
      "\t\t}",
      "\t}",
      "}",
      "${8}"
    ],
    "description": "triple for loop"
  },

  "bitfor": {
    "prefix": "bitfor",
    "body": [
      "for (int ${1:bit} = 0; ${1:bit} < (1 << ${2:n}); ${1:bit}++) {",
      "\tfor (int ${3:i} = 0; ${3:i} < n; ${3:i}++) {",
      "\t\tif (${1:bit} & (1 << ${3:i})) {",
      "\t\t\t${4}",
      "\t\t}",
      "\t}",
      "}",
      "${5}"
    ],
    "description": "loop"
  },

  "std::sort_asc": {
    "prefix": "sort_asc",
    "body": [
      "sort(${1:v}.begin(), ${1:v}.end());"
    ],
    "description": "std::sort"
  },

  "std::sort_desc": {
    "prefix": "sort_desc",
    "body": [
      "sort(${1:v}.begin(), ${1:v}.end(), std::greater<int>{});"
    ],
    "description": "std::sort"
  },

  "Graph": {
    "prefix": "graph",
    "body": [
      "int ${1:n}, ${2:m};",
      "cin >> ${1:n} >> ${2:m};",
      "",
      "Graph G(${1:n});",
      "for (int ${3:i} = 0; ${3:i} < ${4:m}; ${3:i}++) {",
      "\tint ${5:a}, ${6:b};",
      "\tcin >> ${5:a} >> ${6:b};",
      "\tG.at(${5:a}).push_back(${6:b});",
      "\tG.at(${6:b}).push_back(${5:a});",
      "}",
      ""
    ],
    "description": "graph"
  },

  "DFS": {
    "prefix": "dfs",
    "body": [
      "vector<bool> ${1:seen};",
      "void dfs(const Graph &G, int v) {",
      "\t${1:seen}.at(v) = true;",
      "\tfor (auto next_v: G.at(v)) {",
      "\t\tif (${1:seen}.at(next_v)) continue;",
      "\t\tdfs(G, next_v);",
      "\t}",
      "}",
      "",
      "seen.assign(n, false);",
      "dfs(G, s)"
    ],
    "description": "DFS"
  }
}
