# Dein
[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Yggdroot/indentLine'
hook_add = '''
    let g:indentLine_setConceal = 0
'''

[[plugins]]
repo = 'junegunn/fzf.vim'

# Syntax-highlight
[[plugins]]
repo = 'sheerun/vim-polyglot'

# LSP (Language Server Protocol)
[[plugins]]
repo = 'neoclide/coc.nvim'
rev = 'release'
hook_add = '''
    nmap <silent> <space><space> :<C-u>CocList<cr>
    nmap <silent> gd <Plug>(coc-definition)
    nmap <silent> gy <Plug>(coc-type-definition)
    nmap <silent> gi <Plug>(coc-implementation)
    nmap <silent> gr <Plug>(coc-references)
    nmap <leader> rn <Plug>(coc-rename)

    autocmd CursorHold * silent call CocActionAsync('highlight')

    nnoremap <silent> K :call <SID>show_documentation()<CR>
        function! s:show_documentation()
        if &filetype == 'vim'
            execute 'h '.expand('<cword>')
        else
            call CocAction('doHover')
        endif
    endfunction

    inoremap <silent><expr> <TAB>
          \ pumvisible() ? "\<C-n>" :
          \ <SID>check_back_space() ? "\<TAB>" :
          \ coc#refresh()
    inoremap <expr><S-TAB> pumvisible() ? "\<C-p>" : "\<C-h>"

    inoremap <expr> <cr> pumvisible() ? "\<C-y>" : "\<C-g>u\<CR>"

    function! s:check_back_space() abort
      let col = col('.') - 1
      return !col || getline('.')[col - 1]  =~# '\s'
    endfunction

    let g:coc_global_extensions = [
        \ 'coc-clangd'
        \, 'coc-css'
        \, 'coc-dictionary'
        \, 'coc-eslint'
        \, 'coc-tslint'
        \, 'coc-git'
        \, 'coc-html'
        \, 'coc-java'
        \, 'coc-json'
        \, 'coc-markdownlint'
        \, 'coc-neosnippet'
        \, 'coc-omni'
        \, 'coc-python'
        \, 'coc-r-lsp'
        \, 'coc-sh'
        \, 'coc-syntax'
        \, 'coc-tag'
        \, 'coc-vimtex'
        \, 'coc-yaml'
        \, 'coc-vimlsp'
        \, 'coc-word'
        \, 'coc-snippets'
        \, 'coc-spell-checker'
        \ ]

'''

[[plugins]]
repo = 'Shougo/neosnippet.vim'
hook_add = '''
  imap <C-k> <Plug>(neosnippet_expand_or_jump)
  smap <C-k> <Plug>(neosnippet_expand_or_jump)
  xmap <C-k> <Plug>(neosnippet_expand_target)
'''
[[plugins]]
repo = 'Shougo/neosnippet-snippets'

# LaTeX
[[plugins]]
repo = 'lervag/vimtex'
hook_add = '''
    let g:vimtex_fold_envs = 0
    let g:vimtex_view_general_viewer = 'zathura'
    let g:vimtex_view_general_options = '-r @line @pdf @tex'
    let g:vimtex_quickfix_open_on_warning = 0
    let g:vimtex_compiler_latexmk = {
        \ 'background': 1,
        \ 'build_dir': '',
        \ 'continuous': 1,
        \ 'options' : [
            \   '-pdfdvi',
        \   '-verbose',
        \   '-file-line-error',
        \   '-synctex=1',
        \   '-interaction=nonstopmode',
        \ ]}
    let g:tex_conceal=''
    nmap <localleader>ll <plug>(vimtex-compile-toggle)
'''

# markdown
[[plugins]]
repo = 'plasticboy/vim-markdown'
hook_add = '''
    let g:vim_markdown_folding_disabled = 1
    let g:vim_markdown_auto_insert_bullets = 0
    let g:vim_markdown_new_list_item_indent = 0

    let g:vim_markdown_conceal = 0
    let g:tex_conceal = 0

    let g:vim_markdown_math = 1
    let g:tex_flavor = 'latex'
'''

[[plugins]]
repo = 'iamcco/markdown-preview.nvim'
build = 'cd app && yarn install'
hook_add = '''
    let g:mkdp_auto_start = 1
    let g:mkdp_auto_close = 1
    let g:mkdp_browser = 'firefox'
    let g:mkdp_command_for_global = 1
'''

[[plugins]]
repo = 'dhruvasagar/vim-marp'

[[plugins]]
repo = 'dhruvasagar/vim-table-mode'

[[plugins]]
repo = 'mattn/vim-maketable'

# submode
[[plugins]]
repo = 'kana/vim-submode'
hook_add = '''
    call submode#enter_with('winsize', 'n', '', '<C-w>>', '<C-w>>')
    call submode#enter_with('winsize', 'n', '', '<C-w><', '<C-w><')
    call submode#enter_with('winsize', 'n', '', '<C-w>+', '<C-w>+')
    call submode#enter_with('winsize', 'n', '', '<C-w>-', '<C-w>-')
    call submode#map('winsize', 'n', '', '>', '<C-w>>')
    call submode#map('winsize', 'n', '', '<', '<C-w><')
    call submode#map('winsize', 'n', '', '+', '<C-w>+')
    call submode#map('winsize', 'n', '', '-', '<C-w>-')
'''

# Appearance
[[plugins]]
repo = 'cocopon/iceberg.vim'
[[plugins]]
repo = 'gkeep/iceberg-dark'
[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
    let g:lightline = { 'colorscheme': 'icebergDark'}
'''

# Git
[[plugins]]
repo = "airblade/vim-gitgutter"
[[plugins]]
repo = "tpope/vim-fugitive"

# Terminal
[[plugins]]
repo = 'Shougo/deol.nvim'
hook_add = '''
    nnoremap <silent><C-o> :<C-u>Deol -split=floating<CR>
    tnoremap <ESC>   <C-\><C-n>
'''
